// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  Address   String?
  role      Role     @default(USER)
  branch    Branch   @default(CENTER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Part {
  id          Int             @id @default(autoincrement())
  description String?
  sr_number   String
  image       String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  partItems   PartOnRequest[]
  model       Model           @relation(fields: [modelId], references: [id], onDelete: Cascade)
  modelId     Int
}

model Model {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  parts     Part[]
}

model Request {
  id           Int             @id @default(autoincrement())
  date         DateTime
  location     String
  requestItems PartOnRequest[]
  status       Status @default(PENDING)
}

model PartOnRequest {
  id Int @id @default(autoincrement())

  request   Request @relation(fields: [requestId], references: [id], onDelete: Cascade)
  requestId Int
  part      Part    @relation(fields: [partId], references: [id], onDelete: Cascade)
  partId    Int
}

enum Role {
  ADMIN
  USER
}

enum Branch {
  BKK
  NORTH
  SOUTH
  NORTH_EAST
  CENTER
}

enum Status {
  PENDING
  ACCEPT
  COMPLETE
}
